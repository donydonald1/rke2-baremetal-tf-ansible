cloudnative-pg-cluster:
type: postgresql

version:
  postgresql: "17"
  timescaledb: "2.15"
  postgis: "3.4"
recovery:
  method: backup
  provider: s3
  s3:
    region: "us-east-1"
    endpointURL: http://minio.minio.svc.cluster.local:9000
    bucket: postgres
    path: "/pg-backups"
    accessKey: <path:secret/data/minio#postgres_user>
    secretKey: <path:secret/data/minio#postgres_password>

    inheritFromIAMRole: false
  pgBaseBackup:
    # -- Name of the database used by the application. Default: `app`.
    database: grafana
    # -- Name of the secret containing the initial credentials for the owner of the user database. If empty a new secret will be created from scratch
    secret: "postgres-superuser-secret"
    # -- Name of the owner of the database in the instance to be used by applications. Defaults to the value of the `database` key.
    owner: "grafana"
    source:
      host: ""
      port: 5432
      username: ""
      database: "grafana"
      sslMode: "verify-full"
      passwordSecret:
        create: false

cluster:
  # -- Number of instances
  instances: 3
  roles:
  - name: grafana
    ensure: present
    login: true
    superuser: false
    createdb: false
    passwordSecret:
      name: grafana-db-credentials
  # - name: loki
  #   ensure: present
  #   login: true
  #   superuser: false
  #   createdb: false
  #   passwordSecret:
  #     name: loki-db-credentials


  storage:
    size: 8Gi
    storageClass: "nfs-csi"

  walStorage:
    enabled: true
    size: 1Gi
    storageClass: "nfs-csi"

  # -- The UID of the postgres user inside the image, defaults to 26
  postgresUID: -1
  postgresGID: -1
  resources: {}
    # limits:
    #   cpu: 2000m
    #   memory: 8Gi
    # requests:
    #   cpu: 2000m
    #   memory: 8Gi

  enableSuperuserAccess: true
  superuserSecret: "postgres-superuser-secret"
  enablePDB: true
  monitoring:
    enabled: true
    podMonitor:
      enabled: true
      metricRelabelings: []
    prometheusRule:
      enabled: true

  postgresql:
    initdb:
      localeCollate: 'en_US.utf8'
      localeCType: 'en_US.utf8'
      dataChecksums: true
      database: grafana
      owner: grafana
      secret:
        name: postgres-superuser-secret
      postInitTemplateSQL:
      - CREATE EXTENSION postgis;
      - CREATE EXTENSION postgis_topology;
      - CREATE EXTENSION fuzzystrmatch;
      - CREATE EXTENSION postgis_tiger_geocoder

  serviceAccountTemplate:
    metadata:
      name: cnpg-postgres-operator-sa
      # annotations:
      #   eks.amazonaws.com/role-arn: arn:aws:iam::682033478562:role/kosmos-observability-sbx-wl-01-s3-role

backups:
  enabled: true
  endpointURL: "http://minio.minio.svc.cluster.local:9000"
  destinationPath: s3://pg-backups/
  provider: s3
  s3:
    region: "us-east-1"
    bucket: "postgres"
    path: "/pg-backups"
    accessKey: <path:secret/data/minio#postgres_user>
    secretKey: <path:secret/data/minio#postgres_password>
    inheritFromIAMRole: true
  wal:
    compression: gzip
    encryption: AES256
    maxParallel: 1
  data:
    compression: gzip
    encryption: AES256
    jobs: 2

  scheduledBackups:
    name: daily-backup
    schedule: "0 0 0 * * *"
    backupOwnerReference: self
    method: barmanObjectStore
    suspend: true
  retentionPolicy: "30d"

imageCatalog:
  # -- Whether to provision an image catalog. If imageCatalog.images is empty this option will be ignored.
  create: true
  # -- List of images to be provisioned in an image catalog.
  images: []
    # - image: ghcr.io/your_repo/your_image:your_tag
    #   major: 16

# -- List of PgBouncer poolers
poolers: []
  # -
  #   # -- Pooler name
  #   name: rw
  #   # -- PgBouncer type of service to forward traffic to.
  #   type: rw
  #   # -- PgBouncer pooling mode
  #   poolMode: transaction
  #   # -- Number of PgBouncer instances
  #   instances: 3
  #   # -- PgBouncer configuration parameters
  #   parameters:
  #     max_client_conn: "1000"
  #     default_pool_size: "25"
  #   monitoring:
  #     # -- Whether to enable monitoring
  #     enabled: false
  #     podMonitor:
  #         # -- Whether to enable the PodMonitor
  #       enabled: true
  #   # -- Custom PgBouncer deployment template.
  #   # Use to override image, specify resources, etc.
  #   template: {}
  # -
  #   # -- Pooler name
  #   name: ro
  #   # -- PgBouncer type of service to forward traffic to.
  #   type: ro
  #   # -- PgBouncer pooling mode
  #   poolMode: transaction
  #   # -- Number of PgBouncer instances
  #   instances: 3
  #   # -- PgBouncer configuration parameters
  #   parameters:
  #     max_client_conn: "1000"
  #     default_pool_size: "25"
  #   monitoring:
  #     # -- Whether to enable monitoring
  #     enabled: false
  #     podMonitor:
  #         # -- Whether to enable the PodMonitor
  #       enabled: true
  #   # -- Custom PgBouncer deployment template.
  #   # Use to override image, specify resources, etc.
  #   template: {}
