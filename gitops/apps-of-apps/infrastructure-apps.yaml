apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: infrastructure-apps
spec:
  goTemplate: true
  goTemplateOptions: [ "missingkey=error" ]
  generators:
  - list:
      elements:
      - name: kube-cleanup-operator
        serverSideApply: true
        namespace: kube-cleanup

      - name: cert-manager
        namespace: cert-manager
        serverSideApply: true
      # - name: ingress-nginx
      #   namespace: ingress-nginx
      #   serverSideApply: true
      # - name: argocd
      #   namespace: argocd
      #   serverSideApply: true
      # - name: uptime-kuma
      #   namespace: monitoring
      # - name: cloudnative-pg
      #   namespace: kube-system
      #   serverSideApply: true
      # # - name: ghost
      # - name: go-healthcheck
      # - name: prometheus-operator
      #   namespace: monitoring
      #   serverSideApply: true
      # - name: eck-stack
      #   namespace: elastic-system
      #   serverSideApply: true

  template:
    metadata:
      name: "{{ .name }}"
      annotations:
        argocd.argoproj.io/manifest-generate-paths: "."
        # notifications.argoproj.io/subscribe.on-sync-succeeded.telegram: "-1001726711150"
        # argocd.argoproj.io/compare-options: '{{ printf "%s=%s" "ServerSideDiff" (dig "serverSideDiff" "false" . | toString) }}'
    spec:
      project: infrastructure
      source:
        repoURL: https://github.com/Techsecom/argocd-gitops.git
        targetRevision: HEAD
        path: "infrastructure/{{ .name }}"
        # plugin:
        #   name: avp-directory-include
        # env:
        #   - name: FILE_NAME
        #     value: "system/{{ .name }}"
      destination:
        name: in-cluster
        namespace: '{{ default .name (dig "namespace" "" .) }}'
      ignoreDifferences:
      - group: apiextensions.k8s.io
        kind: CustomResourceDefinition
        jqPathExpressions:
        - .spec.conversion.webhook.clientConfig.caBundle
      # FIXME: https://github.com/cloudnative-pg/charts/issues/426
      # - group: postgresql.cnpg.io
      #   kind: Cluster
      #   jqPathExpressions:
      #     - .spec.postgresql.pg_hba
      #     - .spec.postgresql.pg_ident
      - group: apps
        kind: "*"
        jqPathExpressions:
        - .spec.template.spec.hostUsers
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
        - CreateNamespace=true
        # - RespectIgnoreDifferences=false
        - '{{ printf "%s=%s" "ServerSideApply" (dig "serverSideApply" "true" . | toString) }}'
