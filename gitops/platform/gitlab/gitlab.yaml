apiVersion: apps.gitlab.com/v1beta1
kind: GitLab
metadata:
  name: gitlab
spec:
  chart:
    version: "18.1.0"
    values:
      global:
        time_zone: America/Chicago
        common:
          labels:
            environment: production
        minio:
          enabled: false
        postgresql:
          install: false
        hosts:
          domain: techsecom.io
          hostSuffix: production
          https: true
          externalIP:
          gitlab:
            name: gitlab.prod.techsecom.io
            https: true
          registry:
            name: gitlab.registry.techsecom.io
            https: true
          minio:
            name: minio.gitlab.techsecom.io
            https: true
          smartcard:
            name: smartcard.gitlab.techsecom.io
          kas:
            name: kas.gitlab.techsecom.io
          pages:
            name: pages.gitlab.techsecom.io
            https: true
          ssh: gitlab.prod.techsecom.io
        configureCertmanager: false
        class: nginx
        ingress:
          enabled: true
          tls:
            enabled: true
            secretName: gitlab-tls-secret
          provider: nginx
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/enable-access-log: true
            cert-manager.io/cluster-issuer: letsencrypt-prod
            cert-manager.io/revision-history-limit: "3"
            external-dns.alpha.kubernetes.io/enabled: "true"
            cert-manager.io/duration: "2160h"
            cert-manager.io/renew-before: "720h"
            nginx.ingress.kubernetes.io/ssl-passthrough: "false"
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            external-dns.alpha.kubernetes.io/target: "ops-dev-dc-bm-rke2.techsecoms.com"
            external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"

        initialRootPassword:
          secret: gitlab-initial-root-password
          key: password
        appConfig:
          omniauth:
            enabled: true
            aautoSignInWithProvider: 'saml'
            syncProfileAttributes: [ 'email', "username", "profile" ]
            allowBypassTwoFactor: []
            autoLinkSamlUser: true
            providers:
            - secret: idp-provider
          object_store:
            enabled: true
            proxy_download: true
            storage_options:
              s3:
                bucket: gitlab-uploads-storage
                endpoint: http://minio.minio.svc.cluster.local:9000
                region: us-east-1
                access_key_id: <path:secret/data/minio#postgres_user>
                secret_access_key: <path:secret/data/minio#postgres_password>
          contentSecurityPolicy:
            enabled: true
            directives:
              default_src: "'self'"
              script_src: "'self' 'unsafe-inline' 'unsafe-eval' https://www.recaptcha.net https://apis.google.com"
              frame_ancestors: "'self'"
              frame_src: "'self' https://www.recaptcha.net/ https://content.googleapis.com https://content-compute.googleapis.com https://content-cloudbilling.googleapis.com https://content-cloudresourcemanager.googleapis.com"
              img_src: "* data: blob:"
              style_src: "'self' 'unsafe-inline'"
          terraformState:
            enabled: true
            bucket: gitlab-terraform-state
            # connection: {}
        psql:
          main:
            host: cnpg-cluster-rw.cnpg-system.svc.cluster.local
            port: "5432"
            database: "gitlabhq_production"
            username: "gitlab"
            password:
              useSecret: true
              secret: "<k8s-secret-with-db-password>"
              key: "password"
          ci:
            host: cnpg-cluster-rw.cnpg-system.svc.cluster.local
            port: "5432"
            database: "gitlabhq_production_ci"
            username: "gitlab"
            password:
              useSecret: true
              secret: "<k8s-secret-with-db-password>"
              key: "password"
      certmanager-issuer:
        email: youremail@techsecom.io
      minio:
        enabled: false
      postgresql:
        install: false
      redis:
        install: true
        fullnameOverride: redis
        architecture: replication
        auth:
          sentinel: true
          existingSecret: redis-creds
          existingSecretPasswordKey: REDIS_PASSWORD
        master:
          persistence:
            size: 8Gi
        replica:
          persistence:
            size: 8Gi
            storageClassName:
          resources:
            # requests:
            #   cpu: 2
            #   memory: 2Gi
            limits:
              memory: 2Gi
        sentinel:
          enabled: false
