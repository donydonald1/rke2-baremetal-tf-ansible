apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: redis-creds
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault
  data:
  - secretKey: REDIS_PASSWORD
    remoteRef:
      conversionStrategy: Default
      decodingStrategy: None
      key: secret/redis
      metadataPolicy: None
      property: REDIS_PASSWORD
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: registry-storage
  namespace: gitlab
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault
  target:
    name: registry-storage
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        storage: |
          storage:
            s3:
              accesskey: "{{ .MINIO_ACCESS_KEY }}"
              secretkey: "{{ .MINIO_SECRET_KEY }}"
              bucket: "gitlab-registry-storage"
              region: "us-east-1"
              regionendpoint: "http://minio.minio.svc.cluster.local:9000"
              v4auth: true
              pathstyle: true
              secure: false
              rootdirectory: "/"
  data:
  - secretKey: MINIO_ACCESS_KEY
    remoteRef:
      # Vault KV v2 path (relative to the kv mount configured above)
      key: secret/minio/
      property: postgres_user
  - secretKey: MINIO_SECRET_KEY
    remoteRef:
      key: secret/minio/
      property: postgres_password
---
apiVersion: v1
kind: Secret
metadata:
  name: idp-provider
data:
  provider: bmFtZTogJ3NhbWwnCmxhYmVsOiAnT3VyIFNBTUwgUHJvdmlkZXInCmFyZ3M6CiAgYXNzZXJ0aW9uX2NvbnN1bWVyX3NlcnZpY2VfdXJsOiAnaHR0cHM6Ly9naXRsYWIucHJvZC50ZWNoc2Vjb21zLmNvbS91c2Vycy9hdXRoL3NhbWwvY2FsbGJhY2snCiAgaWRwX2NlcnRfZmluZ2VycHJpbnQ6ICc1NDo4NTpCMzo3NToyMzo1NjoxMjpGQzowQTo2Qjo0MzpEMjpDMToxQjoyNDo3NDpBNTpDODpDNTpCNicKICBpZHBfc3NvX3RhcmdldF91cmw6ICdodHRwczovL3RlY2hzZWNvbXMudWkuY29tL2d3L2lkcC9hcGkvdjEvcHVibGljL3Nzby9zYW1sL2IxN2I4MzFmLTk0MTktNDJkOC05MGM0LTNjYjhmMDYwZjhmZScKICBpc3N1ZXI6ICdodHRwczovL2dpdGxhYi5wcm9kLnRlY2hzZWNvbXMuY29tJwoKICBhdHRyaWJ1dGVfc3RhdGVtZW50czoKICAgIGVtYWlsOiBbICd1cm46b2lkOjEuMy42LjEuNC4xLjU5MjMuMS4xLjEuNicgXSAjIEVuc3VyZSBHaXRMYWIgbWFwcyBlbWFpbCBjb3JyZWN0bHkKICAgIGZpcnN0X25hbWU6IFsgJ3VybjpvaWQ6Mi41LjQuNDInIF0KICAgIGxhc3RfbmFtZTogWyAndXJuOm9pZDoyLjUuNC40JyBdCiAgICBncm91cHM6IFsgJ0dyb3VwcycgXQoKICAjIHJlcXVpcmVkX2dyb3VwczogWyAnRGV2ZWxvcGVycycsICdGcmVlbGFuY2VycycsICdBZG1pbnMnLCAnQXVkaXRvcnMnIF0KICBuYW1lX2lkZW50aWZpZXJfZm9ybWF0OiAndXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6dHJhbnNpZW50JwoKICAjIHVpZF9hdHRyaWJ1dGU6ICdodHRwczovL3d3dy51aS5jb20vMjViMWY3ZDgtMDBiMS00Y2MxLTg4NGYtNzc3ZTAxNTMyN2ViJwogIGlkcF9jZXJ0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0gTUlJRVVUQ0NBem1nQXdJQkFnSUlkanpEMEtVOWQ1c3dEUVlKS29aSWh2Y05BUUVMQlFBd2dhb3hDekFKQmdOViBCQVlUQWtOT01SRXdEd1lEVlFRSUV3aFRhR1Z1V21obGJqRVNNQkFHQTFVRUJ4TUpSM1ZoYm1ka2IyNW5NUXN3IENRWURWUVFLRXdKWFV6RVVNQklHQTFVRUN4TUxkMjl5YXkxemRHRmphM014VVRCUEJnTlZCQU1UU0RZd1pEZGsgWXpCa0xUSmxNMll0TkRkbE5DMDVZekkxTFdGa01qSTRNekZtTkdaaE1XSXhOMkk0TXpGbUxUazBNVGt0TkRKayBPQzA1TUdNMExUTmpZamhtTURZd1pqaG1aVEFlRncweU5UQXlNRFl3TmpNeE5UbGFGdzB6TlRBeU1EWXdOak14IE5UbGFNSUdxTVFzd0NRWURWUVFHRXdKRFRqRVJNQThHQTFVRUNCTUlVMmhsYmxwb1pXNHhFakFRQmdOVkJBY1QgQ1VkMVlXNW5aRzl1WnpFTE1Ba0dBMVVFQ2hNQ1YxTXhGREFTQmdOVkJBc1RDM2R2Y21zdGMzUmhZMnR6TVZFdyBUd1lEVlFRREUwZzJNR1EzWkdNd1pDMHlaVE5tTFRRM1pUUXRPV015TlMxaFpESXlPRE14WmpSbVlURmlNVGRpIE9ETXhaaTA1TkRFNUxUUXlaRGd0T1RCak5DMHpZMkk0WmpBMk1HWTRabVV3Z2dFaU1BMEdDU3FHU0liM0RRRUIgQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURJUkJ3SVBQcmYyVGVTU1d6anhCbGZmemZNWnhCMkNiOWJyK2xEY00zWiBleldlZndrNG9Xb3pUc3FrN0Q5OXJrblBOTEdXcmZqeWVMK2FuaHpHRmo5YTI4amRnZUJGQUxFZkhLTGw2N1lEIEtmZXk3TXZYcmtzVGpSRWlkTkhaSFZVcm9xb3k0N2lrc1BUcEM0VG1ub29NWjhaaXZ5dFNCSUFGNVRMWU9NUlAgYzdiTnNEWFJHUzFNNW5nZ3lKM2I2UnBCUndFelUwZFJGLzMwSjhDQjVUcFNiRE4weXdPNlJLUkNSYzVMaE41MiBLSDBIc3dma1Z6aEN4VTJPNmFkQnE4WFBTRlA1SEEwTmxmb1BhbGFoTFVURmNKV1NEREluQ1ZqNnphdW9WY0lXIDZsaG84dkNHbGtWeXVteVhIT0x1NnloSzAxRzhackdEa0g2aHF2NjNJanAxQWdNQkFBR2plVEIzTUE0R0ExVWQgRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFnWUlLd1lCQlFVSEF3RXdEd1lEVlIwVCBBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSndMdWs3V3lJVkVYdlZicVV6SW5CNXhqeXVBd0ZnWURWUjBSIEJBOHdEWUVMYUdWc2NFQjFhUzVqYjIwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDc1FLY0hMSDQ0WnE1dUIgZFZVTjlLNzlXWTJvTndYTWhwaGJxS01FdGNYS0x4WkdFUHN3cGdKcnRFMXdPZkt0ejlaWVc1VjNmT0hkQ1BJNCBlQjE5K3lEd0s2VXltQUZ2TXRLSEc2WnY2ZzdaWUdvbWkzSHN5RjBuS29kMWh5TGh5Y2pWN1pENjYxNm5rNm1PIHBhbU9reWM1a2ZlY0tXNWRlQ0J2dm9iZHJ5ckZIeUFOVFlEUXcrZ3J5QU9OR04wNXFyd1RieXRBd05YbDlGNk4gZmhycURtYmdCbE5iV0lOc0dMWDh5SFgxT0I2aXByQVF0cHJ2dzlrd0VqZnl4VVpWY2V5YWdoOXVRdmp2Tm5zdiBJVXp1ZkJvVDZGY29qSVlxTXBkeWFKUW5yeE1pRG5xNVZOd0J3MVl5dzducXUrOGZzbDZNVDM3RFVTMzJUbmZEIC9COXptb009IC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
type: Opaque
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: gitlab-initial-root-password
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault
  target:
    name: gitlab-initial-root-password
    creationPolicy: Owner
    template:
      metadata:
        labels:
          cnpg.io/reload: ""
  data:
  - secretKey: password
    remoteRef:
      key: secret/gitlab
      property: gitlab-initial-root-password
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: postgresql-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault
  target:
    name: postgresql-secret
    creationPolicy: Owner
    template:
      metadata:
        labels:
          cnpg.io/reload: ""
  data:
  - secretKey: username
    remoteRef:
      key: secret/gitlab/
      property: dbusername
  - secretKey: password
    remoteRef:
      key: secret/gitlab/
      property: dbpassword
---
apiVersion: apps.gitlab.com/v1beta1
kind: GitLab
metadata:
  name: gitlab
spec:
  chart:
    version: "9.4.2"
    values:
      global:
        time_zone: America/Chicago
        common:
          labels:
            environment: production
        minio:
          enabled: false
        postgresql:
          install: false
        nginx-ingress:
          enabled: false
        hosts:
          domain: techsecom.io
          hostSuffix: production
          https: true
          externalIP:
          gitlab:
            name: gitlab.prod.techsecom.io
            https: true
          registry:
            name: gitlab.registry.techsecom.io
            https: true
          minio:
            name: minio.gitlab.techsecom.io
            https: true
          smartcard:
            name: smartcard.gitlab.techsecom.io
          kas:
            name: kas.gitlab.techsecom.io
          pages:
            name: pages.gitlab.techsecom.io
            https: true
          ssh: gitlab.prod.techsecom.io
        configureCertmanager: false
        class: nginx
        ingress:
          enabled: true
          tls:
            enabled: true
            secretName: gitlab-tls-secret
          provider: nginx
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/enable-access-log: true
            cert-manager.io/cluster-issuer: letsencrypt-prod
            cert-manager.io/revision-history-limit: "3"
            external-dns.alpha.kubernetes.io/enabled: "true"
            cert-manager.io/duration: "2160h"
            cert-manager.io/renew-before: "720h"
            nginx.ingress.kubernetes.io/ssl-passthrough: "false"
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            external-dns.alpha.kubernetes.io/target: "ops-dev-dc-bm-rke2.techsecoms.com"
            external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"

        initialRootPassword:
          secret: gitlab-initial-root-password
          key: password
        appConfig:
          omniauth:
            enabled: true
            aautoSignInWithProvider: 'saml'
            syncProfileAttributes: [ 'email', "username", "profile" ]
            allowBypassTwoFactor: []
            autoLinkSamlUser: true
            providers:
            - secret: idp-provider
          object_store:
            enabled: true
            proxy_download: true
            storage_options:
              s3:
                bucket: gitlab-uploads-storage
                endpoint: http://minio.minio.svc.cluster.local:9000
                region: us-east-1
                access_key_id: <path:secret/data/minio#postgres_user>
                secret_access_key: <path:secret/data/minio#postgres_password>
          contentSecurityPolicy:
            enabled: true
            directives:
              default_src: "'self'"
              script_src: "'self' 'unsafe-inline' 'unsafe-eval' https://www.recaptcha.net https://apis.google.com"
              frame_ancestors: "'self'"
              frame_src: "'self' https://www.recaptcha.net/ https://content.googleapis.com https://content-compute.googleapis.com https://content-cloudbilling.googleapis.com https://content-cloudresourcemanager.googleapis.com"
              img_src: "* data: blob:"
              style_src: "'self' 'unsafe-inline'"
          terraformState:
            enabled: true
            bucket: gitlab-terraform-state
            # connection: {}
        psql:
          main:
            host: cnpg-cluster-rw.cnpg-system.svc.cluster.local
            port: "5432"
            database: "gitlabhq_production"
            username: "gitlab"
            password:
              useSecret: true
              secret: postgresql-secret
              key: "password"
          ci:
            host: cnpg-cluster-rw.cnpg-system.svc.cluster.local
            port: "5432"
            database: "gitlabhq_production_ci"
            username: "gitlab"
            password:
              useSecret: true
              secret: postgresql-secret
              key: "password"
      certmanager-issuer:
        email: youremail@techsecom.io
      postgresql:
        install: false
      nginx-ingress:
        enabled: false
      gitlab:
        toolbox:
          replicas: 2
          backups:
            cron:
              enabled: true
              concurrencyPolicy: Replace
              failedJobsHistoryLimit: 1
              schedule: "0 1 * * *"
              successfulJobsHistoryLimit: 3
              extraArgs: "--skip registry --skip artifacts"
              suspend: false
              backoffLimit: 6
              safeToEvict: false
              restartPolicy: "OnFailure"
              resources:
                requests:
                  cpu: 100m
                  memory: 550M
        gitlab-rails:
          object_storage:
            artifacts:
              enabled: true
              bucket: gitlab-artifacts-storage
              connection:
                endpoint: http://minio.minio.svc.cluster.local:9000
                region: us-east-1
                access_key_id: <path:secret/data/minio#postgres_user>
                secret_access_key: <path:secret/data/minio#postgres_password>
            lfs:
              enabled: true
              bucket: gitlab-lfs-storage
              connection:
                endpoint: http://minio.minio.svc.cluster.local:9000
                region: us-east-1
                access_key_id: <path:secret/data/minio#postgres_user>
                secret_access_key: <path:secret/data/minio#postgres_password>
            uploads:
              enabled: true
              bucket: gitlab-uploads-storage
              connection:
                endpoint: http://minio.minio.svc.cluster.local:9000
                region: us-east-1
                access_key_id: <path:secret/data/minio#postgres_user>
                secret_access_key: <path:secret/data/minio#postgres_password>
            packages:
              enabled: true
              bucket: gitlab-packages-storage
              connection:
                endpoint: http://minio.minio.svc.cluster.local:9000
                region: us-east-1
                access_key_id: <path:secret/data/minio#postgres_user>
                secret_access_key: <path:secret/data/minio#postgres_password>
        webservice:
          minReplicas: 1
          maxReplicas: 6
          resources:
            requests:
              cpu: 5
          #     memory: 1500M
          # service:
          #   type: LoadBalancer
          #   # loadBalancerIP: 1.2.3.4
          #   loadBalancerSourceRanges:
          #   - 0.0.0.0/0
          # ingress:
          #   annotations:
          #     kubernetes.io/ingress.class: nginx
          #     cert-manager.io/cluster-issuer: letsencrypt-prod
          #     nginx.ingress.kubernetes.io/ssl-redirect: false
          #     nginx.ingress.kubernetes.io/ssl-passthrough: false
          #     external-dns.alpha.kubernetes.io/enabled: "true"
          #     cert-manager.io/revision-history-limit: "3"
          #     cert-manager.io/duration: "2160h"
          #     cert-manager.io/renew-before: "720h"
          #     nginx.ingress.kubernetes.io/proxy-body-size: "0"
          #     gethomepage.dev/enabled: "true"
          #     gethomepage.dev/name: Gitlab
          #     gethomepage.dev/description: Prod Gitlab
          #     gethomepage.dev/group: Platform
          #     gethomepage.dev/app: gitlab-webservice-default
          #     gethomepage.dev/icon: https://gitlab.com/gitlab-com/gitlab-artwork/raw/master/logo/logo-square.png
          #     gethomepage.dev/href: https://gitlab.prod.techsecom.io
          #     gethomepage.dev/siteMonitor: https://gitlab.prod.techsecom.io
          #     gethomepage.dev/external: "true"
          #     # nginx.ingress.kubernetes.io/rewrite-target: /
          #   class: nginx
          #   tls:
          #     enabled: true
          #     secretName: gitlab-web-tls

        sidekiq:
          enabled: true
          minReplicas: 2
          maxReplicas: 3
          resources:
            requests:
              cpu: 2
          #     memory: 1000M
        gitlab-shell:
          enabled: true
          minReplicas: 3
          maxReplicas: 6
          config:
            clientAliveInterval: 15
      redis:
        install: true
        fullnameOverride: redis
        architecture: replication
        auth:
          sentinel: true
          existingSecret: redis-creds
          existingSecretPasswordKey: REDIS_PASSWORD
        master:
          persistence:
            size: 8Gi
            storageClass: nfs-csi
        replica:
          persistence:
            size: 8Gi
            storageClass: nfs-csi
          resources:
            # requests:
            #   cpu: 2
            #   memory: 2Gi
            limits:
              memory: 2Gi
        sentinel:
          enabled: false
      registry:
        # resources:
        requests:
          cpu: 5
        ingress:
          # annotations:
          #   kubernetes.io/ingress.class: nginx
          #   cert-manager.io/cluster-issuer: letsencrypt-prod
          #   nginx.ingress.kubernetes.io/ssl-redirect: false
          class: nginx
          tls:
            enabled: true
            secretName: registry-tls
        storage:
          secret: registry-storage
          key: storage
      gitlab-runner:
        log_level: "debug"
        install: true
        rbac:
          create: true
          clusterWideAccess: true
          serviceAccountName: gitlab-runner
          serviceAccount:
            create: true
        envVars:
        - name: RUNNER_ENV
          value: "DOCKER_TLS_CERTDIR=/certs"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-s3-creds
              key: accesskey
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-s3-creds
              key: secretkey

        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
        runners:
          privileged: true
          config: |
            [[runners]]
              name = "gitlab-runner"
              [runners.kubernetes]
                privileged = true
                poll_timeout = 2000
                node_selector_overwrite_allowed = ".*"
                namespace = "{{ .Release.Namespace }}"
                image = "docker:stable"

              [runners.cache]
                Type = "s3"
                Path = "gitlab-runner"
                Shared = true
                [runners.cache.s3]
                  ServerAddress = "minio.minio.svc.cluster.local:9000"
                  BucketName = "runner-cache"
                  BucketLocation = "us-east-1"
                  S3ForcePathStyle = true
                  Insecure = true

            [[runners.kubernetes.volumes.empty_dir]]
              name = "docker-certs"
              mount_path = "/certs/client"
              medium = "Memory"
        podAnnotations:
          gitlab.com/prometheus_scrape: "true"
          gitlab.com/prometheus_port: 9252
