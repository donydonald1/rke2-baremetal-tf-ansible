apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
  labels:
    backup/retain: quaterly
    app: vault
  annotations:
    reloader.stakater.com/auto: "true"
  namespace: vault
spec:
  size: 3
  # renovate: datasource=docker
  #   image: hashicorp/vault:1.18.5
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: vault-node
  #           operator: In
  #           values:
  #           - "true"
  resources:
    vault:
      requests:
        memory: 1Gi
        cpu: 1
      limits:
        memory: 2Gi
        cpu: 2
    bankVaults:
      requests:
        memory: 18Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 500m

    prometheusExporter:
      requests:
        memory: 8Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 500m
  veleroEnabled: false
  # Common annotations for all created resources
  annotations:
    common/annotation: "true"
    reloader.stakater.com/auto: "true"
  vaultAnnotations:
    type/instance: "vault"
  vaultConfigurerAnnotations:
    type/instance: "vaultconfigurer"
  vaultLabels:
    example.com/log-format: "json"
  vaultConfigurerLabels:
    example.com/log-format: "string"
  serviceAccount: vault
  serviceType: ClusterIP
  # tlsExpiryThreshold: 168h

  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      external-dns.alpha.kubernetes.io/enabled: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    spec:
      ingressClassName: nginx
      rules:
      - host: vault.dev.techsecoms.com
        http:
          paths:
          - backend:
              service:
                name: vault
                port:
                  number: 8200
            path: /
            pathType: Prefix
      tls:
      - hosts:
        - vault.dev.techsecoms.com
        secretName: vault-tls-certificate
  volumeMounts:
  - name: vault-raft
    mountPath: /vault/raft
  - name: vault-logs
    mountPath: /vault/logs
  - name: vault-file
    mountPath: /vault/file
  volumeClaimTemplates:
  - metadata:
      name: vault-raft
    spec:
      accessModes:
      - ReadWriteOnce
      volumeMode: Filesystem
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: vault-logs
    spec:
      accessModes:
      - ReadWriteOnce
      volumeMode: Filesystem
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: vault-file
    spec:
      accessModes:
      - ReadWriteOnce
      volumeMode: Filesystem
      resources:
        requests:
          storage: 1Gi
  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    options:
      storeRootToken: true
      # secretShares: 5
      # secretThreshold: 4
    kubernetes:
      secretNamespace: vault

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      raft:
        path: /vault/raft
    # telemetry:
    #   statsd_address: 'localhost:9125'
    log_level: "info"
    log_requests_level: "off"
    log_format: json
    log_file: /vault/logs/
    log_rotate_bytes: 100000000
    log_rotate_max_files: 9
    disable_mlock: true
    introspection_endpoint: true
    # Low lease ttls are crucial to preventing
    # rampant storage consumption
    default_lease_ttl: "1h"
    max_lease_ttl: "1h"
    listener:
      tcp:
        telemetry:
          unauthenticated_metrics_access: true
        address: "[::]:8200"
        cluster_address: "[::]:8201"
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    cluster_addr: "https://${.Env.POD_NAME}:8201"
    api_addr: "https://${.Env.POD_NAME}:8200"
    ui: true
    telemetry:
      prometheus_retention_time: "30s"
      disable_hostname: true
  # statsdDisabled: true
  caNamespaces:
  - "*"
  serviceRegistrationEnabled: true

  vaultEnvsConfig:
  - name: VAULT_LOG_LEVEL
    value: info
  - name: VAULT_STORAGE_FILE
    value: "/vault/file"
  # - name: SKIP_SETCAP
  #   value: 'true'
  # - name: SKIP_CHOWN
  #   value: 'true'

  istioEnabled: false
  envsConfig:
  - name: OIDC_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: vault-secrets
        key: OIDC_CLIENT_SECRET
  - name: OIDC_DISCOVERY_URL
    valueFrom:
      secretKeyRef:
        name: vault-secrets
        key: OIDC_DISCOVERY_URL
  externalConfig:
    auth:
    - type: oidc
      path: oidc
      options:
        listing_visibility: "unauth"
      config:
        oidc_discovery_url: "${env `OIDC_DISCOVERY_URL`}"
        oidc_client_id: upa2zrwgvag2kybe25kvxbgpo
        oidc_client_secret: "${env `OIDC_CLIENT_SECRET`}"
        default_role: admin
        jwt_supported_algs:
        - ES256
        - RS256
      roles:
      - name: default
        allowed_redirect_uris:
        - https://vault.dev.techsecoms.com/ui/vault/auth/oidc/oidc/callback
        - http://localhost:8250/oidc/callback
        user_claim: email
        oidc_scopes:
        - email
        - profile
        - openid
        # groups_claim: groups
        policies: admin
        ttl: 1h
    - type: kubernetes
      path: kubernetes
      config:
        kubernetes_host: https://kubernetes.default.svc.cluster.local
      roles:
      - name: allow-secrets
        bound_service_account_names:
        - external-secrets
        bound_service_account_namespaces:
        - external-secrets
        policies:
        - allow_secrets
        ttl: 1h
      - name: allow-iot-pki
        bound_service_account_names:
        - cert-manager
        bound_service_account_namespaces:
        - cert-manager
        policies:
        - allow_iot_pki
        ttl: 1h

    secrets:
    - path: secret
      type: kv
      description: General secrets.
      options:
        version: 2
    # https://learn.hashicorp.com/tutorials/vault/pki-engine
    - type: pki
      path: pki/techsecom
      description: Techsecom root CA
      config:
        default_lease_ttl: "9528h" # 397 days -> max certificate validity
        max_lease_ttl: "87600h" # 10 years
      configuration:
        config:
        - name: urls
          issuing_certificates:
          - https://vault.dev.techsecoms.com/v1/pki/techsecom/ca
          crl_distribution_points:
          - https://vault.dev.techsecoms.com/v1/pki/techsecom/crl
        roles:
        - name: internal-certificates-techsecoms.com
          allow_localhost: false
          ttl: "9528h"
          max_ttl: "9528h"
          allow_glob_domains: true
          allowed_domains:
          - "*.techsecoms.com"
          allow_subdomains: true
          server_flag: true
          client_flag: false
          key_type: "rsa"
          key_bits: 4096
          signature_bits: 256
          organization: "Techsecom Consulting Group LLc"
          country: "USA"
          locality: "Texas"
          province: "Dallas"
          allowed_domains_template: false
          issuer_ref: "default"
    - type: pki
      path: pki/techsecom
      description: Techsecom Consulting Group LLc root CA
      config:
        default_lease_ttl: "9528h" # 397 days -> max certificate validity
        max_lease_ttl: "87600h" # 10 years
      configuration:
        config:
        - name: urls
          issuing_certificates:
          - https://vault.dev.techsecoms.com/v1/pki/techsecom/ca
          crl_distribution_points:
          - https://vault.dev.techsecoms.com/v1/pki/techsecom/crl
        root/generate:
        - name: internal
          common_name: dev.techsecoms.com
          ttl: "87600h"
          allow_subdomains: true
          allow_wildcard_certificates: true
          allowed_domains:
          - "*.techsecoms.com"
          - "*.dev.techsecoms.com"
          - "*.dev.techsecoms.com"
          - "*.techsecoms.com"
          - "*.internal.techsecoms.com"
          key_type: "rsa"
          key_bits: 4096
          organization: "Techsecom Consulting Group LLc"
          country: "USA"
          locality: "Texas"
          province: "Dallas"
        roles:
        - name: internal-certificates-techsecoms.com-iot
          allow_localhost: false
          ttl: "9528h"
          max_ttl: "9528h"
          allow_glob_domains: true
          allowed_domains:
          - "*.techsecoms.com"
          - "*.dev.techsecoms.com"
          - "*.prod.techsecoms.com"
          - "*.techsecoms.com"
          - "*.internal.techsecoms.com"
          allow_subdomains: true
          server_flag: true
          client_flag: false
          key_type: "rsa"
          key_bits: 4096
          signature_bits: 256
          organization: "Techsecom Consulting Group LLc"
          country: "USA"
          locality: "Texas"
          province: "Dallas"
          allowed_domains_template: false
          issuer_ref: "default"
    policies:
    - name: allow_secrets
      rules: |-
        path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
        }
    - name: allow_iot_pki
      rules: |-
        path "pki/techsecom/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
        }
    - name: admin
      rules: |-
        # Read system health check
        path "sys/health"
        {
          capabilities = ["read", "sudo"]
        }

        # Create and manage ACL policies broadly across Vault

        # List existing policies
        path "sys/policies/acl"
        {
          capabilities = ["list"]
        }

        # Create and manage ACL policies
        path "sys/policies/acl/*"
        {
          capabilities = ["create", "read", "update", "delete", "list", "sudo"]
        }

        # Enable and manage authentication methods broadly across Vault

        # Manage auth methods broadly across Vault
        path "auth/*"
        {
          capabilities = ["create", "read", "update", "delete", "list", "sudo"]
        }

        # Create, update, and delete auth methods
        path "sys/auth/*"
        {
          capabilities = ["create", "update", "delete", "sudo"]
        }

        # List auth methods
        path "sys/auth"
        {
          capabilities = ["read"]
        }

        # Enable and manage the key/value secrets engine at `secret/` path

        # List, create, update, and delete key/value secrets
        path "secret/*"
        {
          capabilities = ["create", "read", "update", "delete", "list", "sudo"]
        }

        # List, create, update, and delete key/value secrets
        path "pki/*"
        {
          capabilities = ["create", "read", "update", "delete", "list", "sudo"]
        }

        # Manage secrets engines
        path "sys/mounts/*"
        {
          capabilities = ["create", "read", "update", "delete", "list", "sudo"]
        }

        # List existing secrets engines.
        path "sys/mounts"
        {
          capabilities = ["read"]
        }
